plugins {
    id "com.github.johnrengelman.shadow"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "crapi-plugin"

configurations {
}

repositories {
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        name = "spongepowered"
        url = "https://repo.spongepowered.org/repository/maven-public"
    }
    maven {
        name = "velocity"
        url = "https://nexus.velocitypowered.com/repository/maven-public"
    }
}

dependencies {
    implementation(project(":crapi-common")) {
        exclude(module: "gson")
        exclude(module: "slf4j-api")
    }
    annotationProcessor("com.velocitypowered:velocity-api:3.0.1")
    compileOnly("com.velocitypowered:velocity-api:3.0.1")
    compileOnly("net.md-5:bungeecord-api:1.17-R0.1-SNAPSHOT")
    compileOnly("org.apache.logging.log4j:log4j-slf4j-impl:2.17.1")
    annotationProcessor("org.spongepowered:spongeapi:7.3.0")
    compileOnly("org.spongepowered:spongeapi:7.3.0")
}

compileJava {
    dependsOn(":crapi-common:build")
}

jar {
    enabled = false
    dependsOn("shadowJar")
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    from (sourceSets.main.resources.srcDirs) {
        include("bungee.yml")
        expand("name": "CRAPI", "version": version)
    }
}

shadowJar {
    archiveClassifier.set(null)
    relocate("kotlin", "net.creationreborn.api.plugin.lib.kotlin")
    relocate("okhttp3", "net.creationreborn.api.plugin.lib.okhttp3")
    relocate("okio", "net.creationreborn.api.plugin.lib.okio")
    relocate("org.intellij.lang.annotations", "net.creationreborn.api.plugin.lib.lang.annotations")
    relocate("org.jetbrains.annotations", "net.creationreborn.api.plugin.lib.annotations")
}